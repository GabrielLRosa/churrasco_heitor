services:
  db:
    build:
      context: ./db
    image: checklist_db:1.0 
    ports:
      - "${DB_PORT}:${DB_PORT}"
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db/postgresql.conf:/etc/postgresql/postgresql.conf
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    ports:
      - "${REDIS_PORT}:6379"

  backend:  
    build:
      context: ./backend 
    image: checklist_api:1.0
    ports:
      - "${APP_PORT}:${APP_PORT}"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - NODE_ENV=${APP_ENV}
      - DB_HOST=${DB_HOST}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_PORT=${DB_PORT}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_DB=${REDIS_DB}
    volumes:
      - ./backend:/usr/src/app
      - backend_node_modules:/usr/src/app/node_modules
    entrypoint: "sh -c \"chmod +x ./wait-for-db.sh && ([ -d node_modules ] || (npm ci --no-audit --no-fund || npm install --no-audit --no-fund)) && ./wait-for-db.sh && npm run dev\""

  # Container PHP com CodeIgniter
  php:
    build:
      context: ./frontend/php
      dockerfile: Dockerfile
    image: checklist_php:1.0
    ports:
      - "8080:80"
    volumes:
      - ./frontend/php:/var/www/html
    environment:
      - APACHE_DOCUMENT_ROOT=/var/www/html
      - API_BASE_URL=http://backend:8081
      - CI_ENV=development
    depends_on:
      - backend
    restart: unless-stopped







volumes:
  pgdata:
  backend_node_modules: